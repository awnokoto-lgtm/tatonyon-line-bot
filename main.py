# main.py
import os
from fastapi import FastAPI, Request, HTTPException, Response
from fastapi.responses import JSONResponse
from linebot import LineBotApi, WebhookParser
from linebot.models import MessageEvent, TextMessage, TextSendMessage

CHANNEL_SECRET = os.getenv("LINE_CHANNEL_SECRET")
CHANNEL_TOKEN  = os.getenv("LINE_CHANNEL_TOKEN")

if not CHANNEL_SECRET or not CHANNEL_TOKEN:
    raise RuntimeError("Missing LINE_CHANNEL_SECRET or LINE_CHANNEL_TOKEN")

line_bot_api = LineBotApi(CHANNEL_TOKEN)
parser = WebhookParser(CHANNEL_SECRET)

app = FastAPI()

@app.get("/")
def root():
    return {"message": "LINE Bot is running!"}

@app.get("/favicon.ico")
def favicon():
    return Response(status_code=204)

@app.post("/webhook")
async def webhook(request: Request):
    signature = request.headers.get("X-Line-Signature")
    if not signature:
        raise HTTPException(status_code=400, detail="Missing X-Line-Signature")

    body = await request.body()
    body = body.decode("utf-8")

    try:
        events = parser.parse(body, signature)
    except Exception as e:
        raise HTTPException(status_code=400, detail=f"Invalid signature: {e}")

    for event in events:
        # ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        if isinstance(event, MessageEvent) and isinstance(event.message, TextMessage):
            user_text = (event.message.text or "").strip()
            norm = user_text.lower()

            # ---- ‡∏Å‡∏ï‡∏¥‡∏Å‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö ----
            # 1) ‡πÄ‡∏°‡∏ô‡∏π
            if user_text in ["‡πÄ‡∏°‡∏ô‡∏π", "MENU", "Menu", "/menu"]:
                reply_text = (
                    "üçΩÔ∏è ‡πÄ‡∏°‡∏ô‡∏π‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n"
                    "‚Ä¢ ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏Å‡πà\n"
                    "‚Ä¢ ‡∏Ç‡πâ‡∏≤‡∏ß‡πÅ‡∏Å‡∏á‡∏Å‡∏∞‡∏´‡∏£‡∏µ‡πà\n"
                    "‚Ä¢ ‡∏£‡∏≤‡πÄ‡∏°‡∏á‡∏ä‡∏≤‡∏ä‡∏π\n"
                    "‡∏™‡∏±‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡∏°‡∏û‡πå: ‡∏™‡∏±‡πà‡∏á + ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π ‡πÄ‡∏ä‡πà‡∏ô `‡∏™‡∏±‡πà‡∏á ‡∏£‡∏≤‡πÄ‡∏°‡∏á‡∏ä‡∏≤‡∏ä‡∏π`"
                )

            # 2) ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
            elif "‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô" in user_text or "japan travel" in norm:
                reply_text = (
                    "‚úàÔ∏è ‡∏£‡∏ß‡∏°‡∏ó‡∏£‡∏¥‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡πã‡∏ß‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥\n"
                    "üëâ https://tatonyon-guidejp.example/ (‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡πã‡∏ß‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢)\n"
                    "‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ö‡∏≠‡∏Å‡πÅ‡∏≠‡πã‡∏ß‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡πâ‡∏≤"
                )

            # 3) ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ / hello / hi
            elif user_text in ["‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö"] or norm in ["hello", "hi", "hey"]:
                reply_text = "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏≤ üòä ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡∏°‡∏û‡πå `‡πÄ‡∏°‡∏ô‡∏π` ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏≤‡∏° `‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô` ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢"

            # 4) ‡∏Ñ‡∏≥‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‚Üí echo
            else:
                reply_text = f"‡∏ö‡∏≠‡∏ó‡∏ï‡∏≠‡∏ö: {user_text}"

            line_bot_api.reply_message(
                event.reply_token,
                TextSendMessage(text=reply_text)
            )

    return JSONResponse({"status": "ok"})
